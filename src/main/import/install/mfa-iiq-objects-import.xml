<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE sailpoint PUBLIC "sailpoint.dtd" "sailpoint.dtd">
<sailpoint>

  <SPRight name="TinyMfaPluginIcon" displayName="View TinyMFA Plugin Icon">
    <Description>Allows a user to view the TinyMFA Plugin Icon</Description>
  </SPRight>
  <SPRight name="TinyMfaPluginActivatedIdentity" displayName="View TinyMFA Plugin Activated Identity">
    <Description>Activates an Identity for TinyMFA</Description>
  </SPRight>
  <SPRight name="TinyMfaPluginAdministrator" displayName="View TinyMFA Plugin Administrator">
    <Description>Administrative Rights for TinyMFA</Description>
  </SPRight>

  <Capability name="TinyMFAActivatedIdentity" displayName="TinyMFA Activated Identity">
    <Description>The capability to assign the TinyMFA authentication to an Identity</Description>
    <RightRefs>
      <Reference class="sailpoint.object.SPRight" name="TinyMfaPluginIcon" />
      <Reference class="sailpoint.object.SPRight" name="TinyMfaPluginActivatedIdentity" />
    </RightRefs>
  </Capability>

  <Capability name="TinyMFAPluginAccess" displayName="TinyMFA Plugin Access">
    <Description>The capability to see the TinyMFA Plugin icon</Description>
    <RightRefs>
      <Reference class="sailpoint.object.SPRight" name="TinyMfaPluginIcon" />
    </RightRefs>
  </Capability>
  
  <Capability name="TinyMFAAdministrator" displayName="TinyMFA Administrator">
    <Description>The capability to administrate the TinyMFA plugin</Description>
    <RightRefs>
      <Reference class="sailpoint.object.SPRight" name="TinyMfaPluginIcon" />
      <Reference class="sailpoint.object.SPRight" name="TinyMfaPluginAdministrator" />
    </RightRefs>
  </Capability>

  <DynamicScope name="TinyMFA Authenticated">
    <Description></Description>
    <Selector>
      <IdentitySelector>
        <MatchExpression and="true">
          <MatchTerm name="capabilities" value="TinyMFAActivatedIdentity" />
        </MatchExpression>
      </IdentitySelector>
    </Selector>
  </DynamicScope>

  <Form name="TinyMFA Token Form" type="Workflow" hidden="true">
    <Description>This form is used to for mfa.</Description>
    <Attributes>
      <Map>
        <entry key="pageTitle" value="TinyMFA Authentication Page" />
        <entry key="subtitle"  value="Please provide the authentication token for your account" />
      </Map>
    </Attributes>

    <Section name="messageSection" type="text">
      <Field value="$(mfaResponseMessage)">
        <Attributes>
          <Map>
            <entry key="hidden">
              <value>
                <Script>
                  <Source>if (mfaResponseMessage == null) return true; else return false;</Source>
                </Script>
              </value>
            </entry>
          </Map>
        </Attributes>
      </Field>
    </Section>

    <Section>
      <Field displayName="user_name" name="name" readOnly="true" value="ref:identityName" />
      <Field displayName="authentication token" name="token" required="true" type="string" />
    </Section>
    <Button label="button_submit" action="next" />
    <Button label="button_cancel" action="cancel" />
  </Form>

  <Workflow explicitTransitions="true"
    handler="sailpoint.api.StandardWorkflowHandler" libraries="Identity,MFA" name="TinyMFA Authentication Workflow" type="MultiFactorAuthentication">
    <Variable initializer="false" name="trace">
      <Description>Used for debugging this workflow and when set to true trace will be sent to stdout.</Description>
    </Variable>
    <Variable name="identityName">
      <Description>The name of the identity to perform Multi-Factor Authentication.</Description>
    </Variable>
    <Variable name="response">
      <Description>The response object (forged)</Description>
    </Variable>
    <Step icon="Start" name="Start" posX="15" posY="12" resultVariable="response">
      <Description>initializes the response object</Description>
      <Script>
        <Source>
<![CDATA[
import java.util.Map;
import java.util.HashMap;
        
return new HashMap();
]]>
        </Source>
      </Script>
      <Transition to="TinyMFA Token" />
    </Step>
    <Step icon="Provision" name="TinyMFA Token" posX="141" posY="12">
      <Approval mode="serial" owner="ref:launcher" return="token">
        <Arg name="workItemType" value="Form" />
        <Arg name="workItemDescription" value="MFA form description" />
        <Arg name="workItemForm" value="TinyMFA Token Form" />
        <Arg name="identityName" value="ref:identityName" />
        <Arg name="applicationName" value="ref:applicationName" />
        <Arg name="mfaResponseMessage"
          value="script:response.get(&quot;mfaResponseMessage&quot;)" />
      </Approval>
      <Description>Display the MFA form to collect information about the user.</Description>
      <Transition to="AttemptLogin" />
    </Step>
    <Step icon="Provision" name="AttemptLogin" posX="142" posY="147" resultVariable="response">
      <Arg name="identityName" value="ref:identityName" />
      <Arg name="token" value="ref:token" />
      <Description>Authenticate TinyMFA token.</Description>
      <Script>
        <Source>
<![CDATA[
import java.util.Map;
import java.util.HashMap;
import sailpoint.api.SailPointContext;

Map response = new HashMap();
response.put("result", false);

//derive proper classloader via plugins cache
ClassLoader clsLoader = sailpoint.server.Environment.getEnvironment().getPluginsCache().getClassLoader("tiny_mfa_plugin");
if(clsLoader != null) {
  try {
    ClassLoader clsLoader = sailpoint.server.Environment.getEnvironment().getPluginsCache().getClassLoader("tiny_mfa_plugin");
    System.out.println("setting parameters");

    //method has two parameters of type String
    Class[] paramString = new Class[3];
    paramString[0] = String.class;
    paramString[1] = String.class;
    paramString[2] = SailPointContext.class;

    Class clObj = clsLoader.loadClass("de.whisperedshouts.tinymfa.rest.TinyMfaRestInterface");
    java.lang.reflect.Method mToCall = clObj.getDeclaredMethod("isValidToken", paramString);
    boolean validateResult = mToCall.invoke(clObj.newInstance(), new Object[]{identityName, token, context});
    if(!validateResult) {
      response.put("mfaResponseMessage", "Token not correct");
    }
    response.put("result", validateResult);

  } catch(Exception e) {
    log.error("Error: ",e);
    throw e;
  }
}

return response;
]]>
        </Source>
      </Script>
      <Transition to="End"
        when="script:(response.get(&quot;result&quot;))" />
      <Transition to="TinyMFA Token" when="!(response.get(&quot;result&quot;))" />
      <Transition to="DenyMessage" />
    </Step>
    <Step action="call:addMessage" name="DenyMessage" posX="394" posY="142">
      <Arg name="message" value="ui_mfa_error_denied" />
      <Arg name="type" value="Error" />
      <Description> Adds a deny message before completing the workflow </Description>
      <Transition to="End" />
    </Step>
    <Step icon="Stop" name="End" posX="394" posY="12" />
  </Workflow>
  
  <Workflow explicitTransitions="true" name="TinyMFA Enroll User Workflow" type="IdentityUpdate">
    <Variable initializer="TinyMFA Enroll User Notification Template" name="informUserEmailTemplate">
      <Description>name of the email template that is going to be used to inform the user about their enrollment</Description>
    </Variable>
    <Variable input="true" name="trace"/>
    <Variable input="true" name="identityName" required="true">
      <Description>name of the identity that will be enrolled</Description>
    </Variable>
    <Variable name="project"/>
    <Variable name="plan"/>
    <Variable name="tinyMfaPluginUrl"/>
    <Variable initializer="false" input="true" name="sendEmail"/>
    <Variable input="true" name="listOfCapabilities"/>
    <Step icon="Start" name="Start" posX="28" posY="10" resultVariable="tinyMfaPluginUrl">
      <Transition to="initialize tinyMfaPluginUrl"/>
    </Step>
      <Step icon="Default" name="initialize tinyMfaPluginUrl" posX="119" posY="10" resultVariable="tinyMfaPluginUrl">
      <Script>
        <Source>
<![CDATA[
sailpoint.object.Configuration configuration = context.getConfiguration();
String serverRootPath = (String) configuration.get("serverRootPath");
String pluginPath     = String.format("%s/%s", new Object[]{serverRootPath, "plugins/pluginPage.jsf?pn=tiny_mfa_plugin"});
return pluginPath;
]]>
        </Source>
      </Script>
      <Transition to="initialize plan"/>
    </Step>
    <Step icon="Default" name="initialize plan" posX="367" posY="10" resultVariable="plan">
      <Script>
        <Source>
<![CDATA[
import sailpoint.object.ProvisioningPlan;
import sailpoint.object.ProvisioningPlan.AccountRequest;
import sailpoint.object.ProvisioningPlan.AttributeRequest;

import java.util.List;
import java.util.ArrayList;


ProvisioningPlan plan = null;
    
if(listOfCapabilities != null && !listOfCapabilities.isEmpty()) {
    plan = new ProvisioningPlan();
    plan.setNativeIdentity(identityName);
    List accountRequestList = new ArrayList();
    AccountRequest accountRequest = new AccountRequest();
    accountRequest.setNativeIdentity(identityName);
    accountRequest.setApplication(ProvisioningPlan.IIQ_APPLICATION_NAME);
    accountRequest.setOperation(AccountRequest.Operation.Modify);

    for(Object capability : listOfCapabilities) {
        String capabilityName = (String) capability;
        accountRequest.add(new AttributeRequest("Capabilities", ProvisioningPlan.Operation.Add, capabilityName));
    }
      
    accountRequestList.add(accountRequest);
    plan.setAccountRequests(accountRequestList);
}
    
return plan;
]]>
        </Source>
      </Script>
      <Transition to="compile project" when="plan != null"/>
      <Transition to="Stop"/>
    </Step>
    <Step action="call:provisionProject" icon="Provision" name="provision capabilities" posX="566" posY="130">
      <Arg name="project" value="ref:project"/>
      <Transition to="send email" when="ref:sendEmail"/>
      <Transition to="Stop"/>
    </Step>
    <Step action="sendEmail" icon="Email" name="send email" posX="736" posY="126">
        <Arg name="template" value="ref:informUserEmailTemplate"/>
        <Arg name="identityDisplayName" value="script:resolveDisplayName(identityName)"/>
        <Arg name="tinyMfaPluginUrl" value="ref:tinyMfaPluginUrl"/>
        <Arg name="to" value="script:getEmail(identityName)"/>
      <Transition to="Stop"/>
    </Step>
    <Step icon="Stop" name="Stop" posX="735" posY="6"/>
    <Step action="compileProvisioningProject" icon="Default" name="compile project" posX="435" posY="130" resultVariable="project">
      <Arg name="plan" value="ref:plan"/>
      <Transition to="provision capabilities"/>
    </Step>
  </Workflow>
  
  <EmailTemplate name="TinyMFA Enroll User Notification Template">
    <Body>
<![CDATA[
  <html>
  <h4>Dear ${identityDisplayName},</h4>
  <p>You have been enrolled to use multifactor authentication when you log into IdentityIQ.</p>
  <p>To proceed, please log into IdentityIQ: <b><a href="${tinyMfaPluginUrl}" target="">${tinyMfaPluginUrl}</a></b></p>
  <p>You will find a new icon in the form of a <i class="fa fa-mobile">mobile phone</i> that you need to click on.</p>
  <p>There, you will find an instruction that you need to follow to activate your multifactor authentication setup.</p>
  <p>
    <br/>
  </p>
  <p>Thank you and Best Regards,</p>
  <p>IdentityIQ administration team</p>
  </html>
]]>    
    </Body>
    <Signature>
      <Inputs>
        <Argument name="to" type="string"/>
        <Argument name="identityName" type="string"/>
        <Argument name="identityDisplayName" type="string"/>
        <Argument name="tinyMfaPluginUrl" type="string"/>
      </Inputs>
    </Signature>
    <Subject>You have been enrolled to IdentityIQ Multifactor Authentication</Subject>
  </EmailTemplate>

  <Configuration name="MFAConfiguration">
    <Attributes>
      <Map>
        <entry key="MFAConfigs">
          <value>
            <List>
              <MFAConfig enabled="true">
                <MFAPopulations>
                  <Reference class="sailpoint.object.DynamicScope" name="TinyMFA Authenticated" />
                </MFAPopulations>
                <MFAWorkflow>
                  <Reference class="sailpoint.object.Workflow" name="TinyMFA Authentication Workflow" />
                </MFAWorkflow>
              </MFAConfig>
            </List>
          </value>
        </entry>
      </Map>
    </Attributes>
  </Configuration>

</sailpoint>