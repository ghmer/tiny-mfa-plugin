<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE sailpoint PUBLIC "sailpoint.dtd" "sailpoint.dtd">
<sailpoint>

  <SPRight name="TinyMfaPluginIcon" displayName="View TinyMFA Plugin Icon">
    <Description>Allows a user to view the TinyMFA Plugin Icon</Description>
  </SPRight>
  <SPRight name="TinyMfaPluginActivatedIdentity" displayName="View TinyMFA Plugin Activated Identity">
    <Description>Activates an Identity for TinyMFA</Description>
  </SPRight>

  <Capability name="TinyMFAActivatedIdentity" displayName="TinyMFA Activated Identity">
    <Description>The capability to assign the TinyMFA authentication to an Identity</Description>
    <RightRefs>
      <Reference class="sailpoint.object.SPRight" name="TinyMfaPluginIcon" />
      <Reference class="sailpoint.object.SPRight" name="TinyMfaPluginActivatedIdentity" />
    </RightRefs>
  </Capability>

  <Capability name="TinyMFAPluginAccess" displayName="TinyMFA Plugin Access">
    <Description>The capability to see the TinyMFA Plugin icon</Description>
    <RightRefs>
      <Reference class="sailpoint.object.SPRight" name="TinyMfaPluginIcon" />
    </RightRefs>
  </Capability>

  <DynamicScope name="TinyMFA Authenticated">
    <Description></Description>
    <Selector>
      <IdentitySelector>
        <MatchExpression and="true">
          <MatchTerm name="capabilities" value="TinyMFAActivatedIdentity" />
        </MatchExpression>
      </IdentitySelector>
    </Selector>
  </DynamicScope>

  <Form name="TinyMFA Token Form" type="Workflow" hidden="true">
    <Description>This form is used to for mfa.</Description>
    <Attributes>
      <Map>
        <entry key="pageTitle" value="TinyMFA Authentication Page" />
        <entry key="subtitle"  value="Please provide the authentication token for your account" />
      </Map>
    </Attributes>

    <Section name="messageSection" type="text">
      <Field value="$(mfaResponseMessage)">
        <Attributes>
          <Map>
            <entry key="hidden">
              <value>
                <Script>
                  <Source>if (mfaResponseMessage == null) return true; else return false;</Source>
                </Script>
              </value>
            </entry>
          </Map>
        </Attributes>
      </Field>
    </Section>

    <Section>
      <Field displayName="user_name" name="name" readOnly="true" value="ref:identityName" />
      <Field displayName="authentication token" name="token" required="true" type="string" />
    </Section>
    <Button label="button_submit" action="next" />
    <Button label="button_cancel" action="cancel" />
  </Form>

  <Workflow explicitTransitions="true"
    handler="sailpoint.api.StandardWorkflowHandler" libraries="Identity,MFA" name="MFA TinyMFA" type="MultiFactorAuthentication">
    <Variable initializer="false" name="trace">
      <Description>Used for debugging this workflow and when set to true trace will be sent to stdout.</Description>
    </Variable>
    <Variable name="identityName">
      <Description>The name of the identity to perform Multi-Factor Authentication.</Description>
    </Variable>
    <Variable name="response">
      <Description>The response object (forged)</Description>
    </Variable>
    <Step icon="Start" name="Start" posX="15" posY="12" resultVariable="response">
      <Description>initializes the response object</Description>
      <Script>
        <Source>
<![CDATA[
import java.util.Map;
import java.util.HashMap;
        
return new HashMap();
]]>
        </Source>
      </Script>
      <Transition to="TinyMFA Token" />
    </Step>
    <Step icon="Provision" name="TinyMFA Token" posX="141" posY="12">
      <Approval mode="serial" owner="ref:launcher" return="token">
        <Arg name="workItemType" value="Form" />
        <Arg name="workItemDescription" value="MFA form description" />
        <Arg name="workItemForm" value="TinyMFA Token Form" />
        <Arg name="identityName" value="ref:identityName" />
        <Arg name="applicationName" value="ref:applicationName" />
        <Arg name="mfaResponseMessage"
          value="script:response.get(&quot;mfaResponseMessage&quot;)" />
      </Approval>
      <Description>Display the MFA form to collect information about the user.</Description>
      <Transition to="AttemptLogin" />
    </Step>
    <Step icon="Provision" name="AttemptLogin" posX="142" posY="147" resultVariable="response">
      <Arg name="identityName" value="ref:identityName" />
      <Arg name="token" value="ref:token" />
      <Description>Authenticate TinyMFA token.</Description>
      <Script>
        <Source>
<![CDATA[
import java.util.Map;
import java.util.HashMap;

Map response = new HashMap();
response.put("result", false);

//derive proper classloader via plugins cache
ClassLoader clsLoader = sailpoint.server.Environment.getEnvironment().getPluginsCache().getClassLoader("tiny_mfa_plugin");
if(clsLoader != null) {
  try {
    ClassLoader clsLoader = sailpoint.server.Environment.getEnvironment().getPluginsCache().getClassLoader("tiny_mfa_plugin");
    System.out.println("setting parameters");

    //method has two parameters of type String
    Class[] paramString = new Class[2];
    paramString[0] = String.class;
    paramString[1] = String.class;

    Class clObj = clsLoader.loadClass("de.whisperedshouts.identityiq.rest.TinyMfaService");
    java.lang.reflect.Method mToCall = clObj.getDeclaredMethod("validateToken", paramString);
    boolean validateResult = mToCall.invoke(clObj.newInstance(), new Object[]{identityName, token});
    if(!validateResult) {
      response.put("mfaResponseMessage", "Token not correct");
    }
    response.put("result", validateResult);

  } catch(Exception e) {
    log.error("Error: ",e);
    throw e;
  }
}

return response;
]]>
        </Source>
      </Script>
      <Transition to="End"
        when="script:(response.get(&quot;result&quot;))" />
      <Transition to="TinyMFA Token" when="!(response.get(&quot;result&quot;))" />
      <Transition to="DenyMessage" />
    </Step>
    <Step action="call:addMessage" name="DenyMessage" posX="394" posY="142">
      <Arg name="message" value="ui_mfa_error_denied" />
      <Arg name="type" value="Error" />
      <Description> Adds a deny message before completing the workflow </Description>
      <Transition to="End" />
    </Step>
    <Step icon="Stop" name="End" posX="394" posY="12" />
  </Workflow>

  <Configuration name="MFAConfiguration">
    <Attributes>
      <Map>
        <entry key="MFAConfigs">
          <value>
            <List>
              <MFAConfig enabled="true">
                <MFAPopulations>
                  <Reference class="sailpoint.object.DynamicScope" name="TinyMFA Authenticated" />
                </MFAPopulations>
                <MFAWorkflow>
                  <Reference class="sailpoint.object.Workflow" name="MFA TinyMFA" />
                </MFAWorkflow>
              </MFAConfig>
            </List>
          </value>
        </entry>
      </Map>
    </Attributes>
  </Configuration>

</sailpoint>